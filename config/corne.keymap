/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        shut_it_down: shut_it_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_press>,
                <&kp D &kp L>,
                <&macro_release>;

            label = "SHUT_IT_DOWN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | W/Mi |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E      &kp R  &kp T        &kp Y          &kp U  &kp I      &kp O    &kp P     &kp BSPC
&mt LGUI MINUS  &kp A  &kp S  &kp D      &kp F  &kp G        &kp H          &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT       &kp Z  &kp X  &kp C      &kp V  &kp B        &kp N          &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                              &kp LCTRL  &mo 1  &kp SPACE    &mt RSHFT RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC          &kp PAGE_UP   &kp PAGE_DOWN   &kp UP         &kp HOME          &kp END          &kp PLUS      &kp N7        &kp N8           &kp N9  &kp KP_MULTIPLY  &trans
&kp EXCLAMATION  &kp AT_SIGN   &kp LEFT_ARROW  &kp DOWN       &kp RIGHT         &kp K_APP        &kp KP_MINUS  &kp N4        &kp N5           &kp N6  &kp KP_DIVIDE    &kp PRINTSCREEN
&trans           &kp ASTERISK  &kp POUND       &kp LESS_THAN  &kp GREATER_THAN  &shut_it_down    &kp KP_DOT    &kp NUMBER_1  &kp N2           &kp N3  &kp KP_DOT       &kp EQUAL
                                               &trans         &trans            &trans           &trans        &trans        &kp KP_NUMBER_0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp LEFT_BRACE        &kp F1  &kp F2   &kp F3   &kp F4   &kp RIGHT_BRACE
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp LEFT_PARENTHESIS  &kp F5  &kp F6   &kp F7   &kp F8   &kp RIGHT_PARENTHESIS
&kp CAPS   &trans    &trans  &trans    &trans    &trans       &kp LBKT              &kp F9  &kp F10  &kp F11  &kp F12  &kp RBKT
                             &trans    &trans    &trans       &trans                &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&kp TAB    &kp EXCL    &kp AT_SIGN   &kp HASH      &kp DLLR  &kp PERCENT    &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp CARET  &trans      &trans        &trans        &trans    &trans         &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp BACKSLASH          &kp GRAVE
&kp CAPS   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &trans    &trans         &kp UNDERSCORE  &kp PLUS       &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp PIPE               &kp TILDE
                                     &trans        &trans    &trans         &trans          &trans         &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Tri {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
